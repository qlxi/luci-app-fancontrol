name: Build luci-app-fancontrol (.ipk) for GL-AXT1800

on:
  push:
    branches: [ main, master ]
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Install OpenWrt build dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libssl-dev python3 python3-distutils rsync unzip zlib1g-dev \
            file wget curl ccache upx-ucl xz-utils

      - name: Clone OpenWrt 6.x source (LiBwrt)
        run: |
          git clone --depth=1 https://github.com/LiBwrt/openwrt-6.x openwrt
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Clone luci-app-fancontrol
        run: |
          cd openwrt/package
          git clone https://github.com/fanteral/luci-app-fancontrol.git luci-app-fancontrol

      - name: Configure target (GL-AXT1800)
        run: |
          cd openwrt
          echo "CONFIG_TARGET_ipq807x=y" >> .config
          echo "CONFIG_TARGET_ipq807x_generic=y" >> .config
          echo "CONFIG_TARGET_ipq807x_generic_DEVICE_glinet_axt1800=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-fancontrol=y" >> .config
          make defconfig

      - name: Build luci-app-fancontrol
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make package/luci-app-fancontrol/{clean,compile} -j$(nproc) V=s

      - name: Collect built packages
        id: collect
        run: |
          cd openwrt
          mkdir -p ../artifacts
          find bin/packages/ -type f -name "luci-app-fancontrol_*.ipk" -exec cp {} ../artifacts/ \;
          echo "pkg_path=$(ls ../artifacts/*.ipk | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-fancontrol-ipk
          path: artifacts/

      - name: Publish release asset
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.collect.outputs.pkg_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
