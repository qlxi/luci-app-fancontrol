name: Build luci-app-fancontrol with SDK (ipq60xx snapshot)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout luci-app-fancontrol
        uses: actions/checkout@v4
        with:
          path: fancontrol

      - name: Cache OpenWrt SDK
        uses: actions/cache@v4
        id: cache-sdk
        with:
          path: openwrt-sdk
          key: ${{ runner.os }}-sdk-${{ hashFiles('fancontrol/Makefile') }}-v1

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential git python3 python3-setuptools unzip wget zlib1g-dev zstd

      - name: Download OpenWrt SDK (ipq60xx snapshot)
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        run: |
          wget -q https://downloads.openwrt.org/snapshots/targets/qualcommax/ipq60xx/openwrt-sdk-qualcommax-ipq60xx_gcc-14.3.0_musl.Linux-x86_64.tar.zst
          tar --use-compress-program=zstd -xf openwrt-sdk-qualcommax-ipq60xx_gcc-14.3.0_musl.Linux-x86_64.tar.zst
          mv openwrt-sdk-qualcommax-ipq60xx_gcc-14.3.0_musl.Linux-x86_64 openwrt-sdk

      - name: Prepare SDK feeds
        run: |
          cd openwrt-sdk
          if [ ! -f "feeds.updated" ]; then
            ./scripts/feeds update -a
            ./scripts/feeds install -a
            touch feeds.updated
          fi

      - name: Add luci-app-fancontrol to SDK
        run: |
          cp -r fancontrol openwrt-sdk/package/luci-app-fancontrol
          cd openwrt-sdk
          echo "CONFIG_PACKAGE_luci-app-fancontrol=y" >> .config
          make defconfig

      - name: Build luci-app-fancontrol (optimized)
        run: |
          cd openwrt-sdk
          make package/luci-app-fancontrol/compile -j$(nproc)

      - name: Find compiled .ipk file
        id: find-ipk
        run: |
          cd openwrt-sdk
          # Ищем IPK файл более точно
          IPK_FILE=$(find bin -name "luci-app-fancontrol*.ipk" -type f | head -1)
          if [ -z "$IPK_FILE" ]; then
            echo "IPK file not found! Searching in all directories..."
            find . -name "*.ipk" -type f | head -10
            exit 1
          fi
          echo "Found IPK: $IPK_FILE"
          echo "ipk_file=$IPK_FILE" >> $GITHUB_OUTPUT
          # Сохраняем полный путь для использования в следующих шагах
          echo "ipk_path=openwrt-sdk/$IPK_FILE" >> $GITHUB_OUTPUT

      - name: Verify IPK file exists
        run: |
          echo "Checking if IPK file exists: ${{ steps.find-ipk.outputs.ipk_path }}"
          ls -la "${{ steps.find-ipk.outputs.ipk_path }}" || echo "File not found!"
          pwd
          ls -la openwrt-sdk/bin/packages/*/base/ || echo "Base directory not found"

      - name: Upload to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-fancontrol-ipk
          path: ${{ steps.find-ipk.outputs.ipk_path }}

      - name: Create Release and Upload IPK
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.sha }}
          name: "Build ${{ github.sha }}"
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            ${{ steps.find-ipk.outputs.ipk_path }}
