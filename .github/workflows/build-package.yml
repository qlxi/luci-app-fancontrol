name: Build luci-app-fancontrol with SDK (ipq60xx snapshot)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout luci-app-fancontrol
        uses: actions/checkout@v4
        with:
          path: fancontrol

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential git python3 python3-setuptools unzip wget zlib1g-dev zstd

      - name: Download OpenWrt SDK (ipq60xx snapshot)
        run: |
          wget -q https://downloads.openwrt.org/snapshots/targets/qualcommax/ipq60xx/openwrt-sdk-qualcommax-ipq60xx_gcc-14.3.0_musl.Linux-x86_64.tar.zst
          tar --use-compress-program=zstd -xf openwrt-sdk-qualcommax-ipq60xx_gcc-14.3.0_musl.Linux-x86_64.tar.zst
          mv openwrt-sdk-qualcommax-ipq60xx_gcc-14.3.0_musl.Linux-x86_64 openwrt-sdk

      - name: Prepare SDK feeds
        run: |
          cd openwrt-sdk
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Debug SDK structure
        run: |
          cd openwrt-sdk
          echo "=== SDK structure ==="
          ls -la
          echo "=== Package directory ==="
          ls -la package/ || echo "No package directory"
          echo "=== Feeds directory ==="
          ls -la feeds/ || echo "No feeds directory"

      - name: Add luci-app-fancontrol to SDK
        run: |
          # Копируем наш пакет в SDK
          cp -r fancontrol openwrt-sdk/package/luci-app-fancontrol
          cd openwrt-sdk
          echo "=== After copying package ==="
          ls -la package/luci-app-fancontrol/
          
          # Проверяем Makefile
          if [ -f "package/luci-app-fancontrol/Makefile" ]; then
            echo "=== Makefile content ==="
            cat package/luci-app-fancontrol/Makefile
          else
            echo "ERROR: Makefile not found!"
            find package/luci-app-fancontrol/ -type f
          fi

      - name: Configure and build
        run: |
          cd openwrt-sdk
          echo "CONFIG_PACKAGE_luci-app-fancontrol=y" >> .config
          make defconfig
          
          # Показываем конфигурацию
          echo "=== Configuration ==="
          grep -i fancontrol .config || echo "fancontrol not in config"
          
          # Собираем с подробным выводом для отладки
          echo "=== Building package ==="
          make package/luci-app-fancontrol/compile V=s -j1

      - name: Find compiled .ipk file
        id: find-ipk
        run: |
          cd openwrt-sdk
          echo "=== Searching for IPK files ==="
          find . -name "*.ipk" -type f | head -20 || echo "No IPK files found"
          
          echo "=== Bin directory structure ==="
          find bin -type d 2>/dev/null | head -20 || echo "No bin directory"
          
          # Ищем конкретно наш пакет
          IPK_FILE=$(find . -name "*luci-app-fancontrol*.ipk" -type f | head -1)
          if [ -n "$IPK_FILE" ]; then
            echo "Found IPK: $IPK_FILE"
            echo "ipk_file=$IPK_FILE" >> $GITHUB_OUTPUT
            echo "ipk_path=openwrt-sdk/$IPK_FILE" >> $GITHUB_OUTPUT
          else
            echo "ERROR: luci-app-fancontrol IPK not found!"
            echo "=== Available packages in bin ==="
            find bin -name "*.ipk" -type f 2>/dev/null | head -20 || echo "No packages in bin"
            exit 1
          fi

      - name: Upload to Artifacts
        if: steps.find-ipk.outputs.ipk_path
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-fancontrol-ipk
          path: ${{ steps.find-ipk.outputs.ipk_path }}

      - name: Create Release and Upload IPK
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && steps.find-ipk.outputs.ipk_path
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.sha }}
          name: "Build ${{ github.sha }}"
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            ${{ steps.find-ipk.outputs.ipk_path }}
